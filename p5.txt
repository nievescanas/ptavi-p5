 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura? 
        954 paquetes
 ** ¿Cuánto tiempo dura la captura?
        56.149345 seg
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    Se esta realizando en la maquina cliente: 192.168.1.34
    Es un IP privada ya que esta dentro del rango(192.168.0.0 - 192.168.255.255)

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
    UDP 96.23 %
    TCP 2.10 %
    Es adecuado ya que en un transmision en tiempo real no interesa el reenvio de datagramas antiguos.

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
    DNS, TCP, HTTP, STUN, SIP, RTP(H.261), ARP, ICMP y UDP. 

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
    SIP:
    7.34-7.425-7.427-7.51-7.56-7.64
	14.42- 14.59-14.61
	16.23-16.33-16.34-16.46
	38.11-38.36264-38.36267-38.93
	39.15-39.17-39.20-39.22
	55.69-55.774-55.776-55.85

 ** Y los paquetes con RTP, ¿cuándo se envían?
    En total son unos 919 mensajes enviados entre los tiempos 17.16 - 38.19.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
        DNS
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
        80.58.61.250 

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
        86.64.162.35

 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
        Para comprobar que esta bien la ip que le mando, ahora le pide con el nombre su ip. 

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
        En los get que aparecen de http le pide la url: htttp://ekiga.net/ip/

 ** ¿Qué user agent (UA) la está pidiendo?
        Ekiga

 ** ¿Qué devuelve el servidor?
        La ip 83.36.48.212 en el sip 200 ok.

 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
        212.128.254.152

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
    Es un protocolo de red de tipo cliente servidor que permite a clientes NAT encontrar su dirección ip pública.

 ** ¿Estamos tras un NAT?
    Si, ya que se están utilizando ip privadas y públicas.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
        86.64.162.35 
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
        Puerto:5063
 ** ¿Qué método SIP utiliza el UA para registrarse?
        REGISTER sip:ekiga.net
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
        En sip , dentro de menssage header en el campo allow :
            INVITE, ACK, OPTIONS, BYE,CANCEL,NOTIFY,REFER Y MESSAGE.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
        No, el register manda un mensaje con el error 401 Unauthorized.
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
        Mas tarde le manda un 200 ok
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
        El primer paquete tiene el siguiente tamaño: 523 bytes
        El segundo: 712 bytes
        Esto se debe a que en el segundo mensaje aparece el campo nonce, para comprobar la autenticidad.

 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
    En sip, dentro de message headre en el campo from: "Gregorio Robles" <sip:grex@ekiga.net>

 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    La descripcion de la sesion sip que se va a llevar a cabo.

 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    No. Recibe un error de 407 Proxy Authentication Requiered

 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    En el segundo INVITE el cliente le manda el campo nonce.


11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?

    Utiliza sip para establecer la llamada a través del proxy, DNS para saber la ip de ekiga, ACK para asentir los mensajes, RTP para la transmision de audio y video en tiempo real.
 
 ** ¿Cuál es el tamaño de paquete de los mismos?
    RTP: Aprox  214 bytes
    H.261: Aprox entre 0 y 1100.

 ** ¿Se utilizan bits de padding?
    No se utilizan bits en este campo porque no llevan bytes de relleno las tramas.

 ** ¿Cuál es la periodicidad de los paquetes que se envían?
    La periodicidad se calcula de la siguiente forma:
    Primero miramos los bytes que se mandan en audio o video y despues playload.
    
 ** ¿Cuántos bits/segundo estamos enviando?
    64.000 bits por segundo.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
    Hay dos flujos:
        - Audio
        - Video
 ** ¿Cuántos paquetes se pierden?
    Ninguno. 0
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
    El valor maximo de la delta te indica el tiempo máximo que hay entre el envio de los paquetes, contra mas cercano a 0 sea, mejor.
    Audio: 1290.444000
    Viedo: 1290.479000

 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
    Es la variación en el retraso de los paquetes
    Audio: 119.635154
    Video: 183.095775

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
    0

 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
    Lo podemos saber por el numero de secuencia y por el marker.

 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
    Hasta el paquete 247, que pasa a 38.

 ** ¿A qué se debe el cambio tan brusco del jitter?
    Al cambio tan brsuco sufrido el la delta.

 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?

 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
    El valor de la delta cambia, sube a 554.74.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
    25 seg.

 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    SSRC: 0xBF4AFD37
    CSRCs: 0 

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
    Cierre de sesión:
        BYE sip:500@86.64.162.35:5080

 ** ¿En qué trama(s)?
    4 tramas.

 ** ¿Por qué crees que se envía varias veces?
    Se manda varias veces porque da error, falta alguna información (alguna dirección ethernet). 

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    Porque para darse de baja en el servidor es necesario mandar un Register con el campo de Expires = 0.

 ** ¿En qué trama sucede esto?
    Sucede en la 950 y en la 952. La segunda es la que se efectua ya que manda el nonce para verificarse.

 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
    En el expires.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
    Si que necesita utilizar dns ya que necesita saber la direccion ip del servidor.

 ** ¿Son diferentes el registro y la descripción de la sesión?
    

18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
    Hay 4 flujos:
        - 2 Flujos de theora (video)
        - 2 Flujos de Speex (audio)

 ** ¿Cuál es su periodicidad?
    Speex: 
        Manda 106 bytes cada 320 segundos. Por lo que manda un byte cada 3 seg. 

 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
    Theora:    
        Max delta: 32.057 y 32.703
        Max Jitter: 1.213 y 0.791
        Mean Jitter: 0.021 y 0.045
    Speex:
        Max delta: 30.616 y 36.528
        Max Jitter: 13.747 y 14.079
        Mean Jitter: 13.255 y 9.016

 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
    Si se puede. Te metes en Telephony y dentro seleccionamos VOIP CAllS.Hay dentro podemos reproduccir tanto el audio como el video seleccionando el flujo que queremos. 

 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
    Music en espera sip: 9999@qxip.net (Cortesía de QUASARMUSIQ)

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
